// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: chat/proto/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Join struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Join) Reset() {
	*x = Join{}
	mi := &file_chat_proto_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Join) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Join) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// user text in chat
type Text struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_chat_proto_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Text) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Text) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Text) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Typing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Typing) Reset() {
	*x = Typing{}
	mi := &file_chat_proto_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Typing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Typing) ProtoMessage() {}

func (x *Typing) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Typing.ProtoReflect.Descriptor instead.
func (*Typing) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Typing) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Typing) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// server notifications
type Notifications struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notifications) Reset() {
	*x = Notifications{}
	mi := &file_chat_proto_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notifications) ProtoMessage() {}

func (x *Notifications) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notifications.ProtoReflect.Descriptor instead.
func (*Notifications) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{3}
}

func (x *Notifications) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Notifications) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientEvent_Join
	//	*ClientEvent_Text
	//	*ClientEvent_Typing
	Payload       isClientEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientEvent) Reset() {
	*x = ClientEvent{}
	mi := &file_chat_proto_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent) ProtoMessage() {}

func (x *ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent.ProtoReflect.Descriptor instead.
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ClientEvent) GetPayload() isClientEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientEvent) GetJoin() *Join {
	if x != nil {
		if x, ok := x.Payload.(*ClientEvent_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *ClientEvent) GetText() *Text {
	if x != nil {
		if x, ok := x.Payload.(*ClientEvent_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *ClientEvent) GetTyping() *Typing {
	if x != nil {
		if x, ok := x.Payload.(*ClientEvent_Typing); ok {
			return x.Typing
		}
	}
	return nil
}

type isClientEvent_Payload interface {
	isClientEvent_Payload()
}

type ClientEvent_Join struct {
	Join *Join `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type ClientEvent_Text struct {
	Text *Text `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type ClientEvent_Typing struct {
	Typing *Typing `protobuf:"bytes,3,opt,name=typing,proto3,oneof"`
}

func (*ClientEvent_Join) isClientEvent_Payload() {}

func (*ClientEvent_Text) isClientEvent_Payload() {}

func (*ClientEvent_Typing) isClientEvent_Payload() {}

type ServerEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerEvent_Notifications
	//	*ServerEvent_Text
	//	*ServerEvent_Typing
	Payload       isServerEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	mi := &file_chat_proto_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEvent.ProtoReflect.Descriptor instead.
func (*ServerEvent) Descriptor() ([]byte, []int) {
	return file_chat_proto_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ServerEvent) GetPayload() isServerEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerEvent) GetNotifications() *Notifications {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Notifications); ok {
			return x.Notifications
		}
	}
	return nil
}

func (x *ServerEvent) GetText() *Text {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *ServerEvent) GetTyping() *Typing {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Typing); ok {
			return x.Typing
		}
	}
	return nil
}

type isServerEvent_Payload interface {
	isServerEvent_Payload()
}

type ServerEvent_Notifications struct {
	Notifications *Notifications `protobuf:"bytes,1,opt,name=notifications,proto3,oneof"`
}

type ServerEvent_Text struct {
	Text *Text `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type ServerEvent_Typing struct {
	Typing *Typing `protobuf:"bytes,3,opt,name=typing,proto3,oneof"`
}

func (*ServerEvent_Notifications) isServerEvent_Payload() {}

func (*ServerEvent_Text) isServerEvent_Payload() {}

func (*ServerEvent_Typing) isServerEvent_Payload() {}

var File_chat_proto_chat_proto protoreflect.FileDescriptor

const file_chat_proto_chat_proto_rawDesc = "" +
	"\n" +
	"\x15chat/proto/chat.proto\x12\x04chat\".\n" +
	"\x04Join\x12\x12\n" +
	"\x04room\x18\x01 \x01(\x05R\x04room\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\"H\n" +
	"\x04Text\x12\x12\n" +
	"\x04room\x18\x01 \x01(\x05R\x04room\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"0\n" +
	"\x06Typing\x12\x12\n" +
	"\x04room\x18\x01 \x01(\x05R\x04room\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\"=\n" +
	"\rNotifications\x12\x12\n" +
	"\x04room\x18\x01 \x01(\x05R\x04room\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x84\x01\n" +
	"\vClientEvent\x12 \n" +
	"\x04join\x18\x01 \x01(\v2\n" +
	".chat.JoinH\x00R\x04join\x12 \n" +
	"\x04text\x18\x02 \x01(\v2\n" +
	".chat.TextH\x00R\x04text\x12&\n" +
	"\x06typing\x18\x03 \x01(\v2\f.chat.TypingH\x00R\x06typingB\t\n" +
	"\apayload\"\x9f\x01\n" +
	"\vServerEvent\x12;\n" +
	"\rnotifications\x18\x01 \x01(\v2\x13.chat.NotificationsH\x00R\rnotifications\x12 \n" +
	"\x04text\x18\x02 \x01(\v2\n" +
	".chat.TextH\x00R\x04text\x12&\n" +
	"\x06typing\x18\x03 \x01(\v2\f.chat.TypingH\x00R\x06typingB\t\n" +
	"\apayload2?\n" +
	"\vChatService\x120\n" +
	"\x04Chat\x12\x11.chat.ClientEvent\x1a\x11.chat.ServerEvent(\x010\x01B0Z.github.com/rtorresg90/grpc-projects/chat/protob\x06proto3"

var (
	file_chat_proto_chat_proto_rawDescOnce sync.Once
	file_chat_proto_chat_proto_rawDescData []byte
)

func file_chat_proto_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_proto_chat_proto_rawDesc), len(file_chat_proto_chat_proto_rawDesc)))
	})
	return file_chat_proto_chat_proto_rawDescData
}

var file_chat_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_chat_proto_chat_proto_goTypes = []any{
	(*Join)(nil),          // 0: chat.Join
	(*Text)(nil),          // 1: chat.Text
	(*Typing)(nil),        // 2: chat.Typing
	(*Notifications)(nil), // 3: chat.Notifications
	(*ClientEvent)(nil),   // 4: chat.ClientEvent
	(*ServerEvent)(nil),   // 5: chat.ServerEvent
}
var file_chat_proto_chat_proto_depIdxs = []int32{
	0, // 0: chat.ClientEvent.join:type_name -> chat.Join
	1, // 1: chat.ClientEvent.text:type_name -> chat.Text
	2, // 2: chat.ClientEvent.typing:type_name -> chat.Typing
	3, // 3: chat.ServerEvent.notifications:type_name -> chat.Notifications
	1, // 4: chat.ServerEvent.text:type_name -> chat.Text
	2, // 5: chat.ServerEvent.typing:type_name -> chat.Typing
	4, // 6: chat.ChatService.Chat:input_type -> chat.ClientEvent
	5, // 7: chat.ChatService.Chat:output_type -> chat.ServerEvent
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chat_proto_chat_proto_init() }
func file_chat_proto_chat_proto_init() {
	if File_chat_proto_chat_proto != nil {
		return
	}
	file_chat_proto_chat_proto_msgTypes[4].OneofWrappers = []any{
		(*ClientEvent_Join)(nil),
		(*ClientEvent_Text)(nil),
		(*ClientEvent_Typing)(nil),
	}
	file_chat_proto_chat_proto_msgTypes[5].OneofWrappers = []any{
		(*ServerEvent_Notifications)(nil),
		(*ServerEvent_Text)(nil),
		(*ServerEvent_Typing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_proto_chat_proto_rawDesc), len(file_chat_proto_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_chat_proto_msgTypes,
	}.Build()
	File_chat_proto_chat_proto = out.File
	file_chat_proto_chat_proto_goTypes = nil
	file_chat_proto_chat_proto_depIdxs = nil
}
